{
    "cells": [
        {
            "metadata": {
                "collapsed": true
            },
            "cell_type": "markdown",
            "source": "# Gregory Pollard Battle of the Neighbourhoods Project"
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "## NOTE: THE REPORT IS A WORD DOCUMENT IN THE GITHUB REPOSITORY"
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "### Import Necessary Packages"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "import requests # library to handle requests\nimport pandas as pd # library for data analsysis\nimport numpy as np # library to handle data in a vectorized manner\nimport random # library for random number generation\n\n\n!pip install geopy\nfrom geopy.geocoders import Nominatim # module to convert an address into latitude and longitude values\n\n# libraries for displaying images\nfrom IPython.display import Image \nfrom IPython.core.display import HTML \n    \n# tranforming json file into a pandas dataframe library\nfrom pandas.io.json import json_normalize\n\n\n! pip install folium==0.5.0\nimport folium # plotting library\n\nprint('Folium installed')\nprint('Libraries imported.')\n\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\nimport json # library to handle JSON files\n\n!conda install --override-channels -c main package_in_main\n\n#!conda install -c conda-forge geopy --yes # uncomment this line if you haven't completed the Foursquare API lab\n\nfrom pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\n\n# Matplotlib and associated plotting modules\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\n\n# import k-means from clustering stage\nfrom sklearn.cluster import KMeans\n\n#!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab\nimport folium # map rendering library\n\nprint('Libraries imported.')",
            "execution_count": 2,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "Requirement already satisfied: geopy in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (2.0.0)\nRequirement already satisfied: geographiclib<2,>=1.49 in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from geopy) (1.50)\nCollecting folium==0.5.0\n  Downloading folium-0.5.0.tar.gz (79 kB)\n\u001b[K     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 79 kB 6.7 MB/s eta 0:00:011\n\u001b[?25hCollecting branca\n  Downloading branca-0.4.1-py3-none-any.whl (24 kB)\nRequirement already satisfied: jinja2 in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from folium==0.5.0) (2.11.2)\nRequirement already satisfied: requests in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from folium==0.5.0) (2.24.0)\nRequirement already satisfied: six in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from folium==0.5.0) (1.15.0)\nRequirement already satisfied: MarkupSafe>=0.23 in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from jinja2->folium==0.5.0) (1.1.1)\nRequirement already satisfied: idna<3,>=2.5 in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from requests->folium==0.5.0) (2.9)\nRequirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from requests->folium==0.5.0) (1.25.9)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from requests->folium==0.5.0) (2020.12.5)\nRequirement already satisfied: chardet<4,>=3.0.2 in /opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages (from requests->folium==0.5.0) (3.0.4)\nBuilding wheels for collected packages: folium\n  Building wheel for folium (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for folium: filename=folium-0.5.0-py3-none-any.whl size=76240 sha256=1799209c037753d203f79cd56d7fae7d2cf9be31d2909534a0d112066e8dfc93\n  Stored in directory: /tmp/wsuser/.cache/pip/wheels/b2/2f/2c/109e446b990d663ea5ce9b078b5e7c1a9c45cca91f377080f8\nSuccessfully built folium\nInstalling collected packages: branca, folium\nSuccessfully installed branca-0.4.1 folium-0.5.0\nFolium installed\nLibraries imported.\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\nCollecting package metadata (repodata.json): done\nSolving environment: failed with initial frozen solve. Retrying with flexible solve.\n\nPackagesNotFoundError: The following packages are not available from current channels:\n\n  - package_in_main\n\nCurrent channels:\n\n  - https://conda.anaconda.org/main/linux-64\n  - https://conda.anaconda.org/main/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\n\n    https://anaconda.org\n\nand use the search bar at the top of the page.\n\n\nLibraries imported.\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "\n\n### Prepare Foursquare Details"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "CLIENT_ID = 'X5OYKVDZ3N4VVLFJERLAXNHKHPIKVR14BIJPSHXRLZ314EZI' # your Foursquare ID\nCLIENT_SECRET = 'UCVWLRPX4LSGGTW3EQYFSO0HL2L0TKCM0X01DPQUWNOZOBWF' # your Foursquare Secret\nACCESS_TOKEN = 'ACI1JL2T214BVPNOZUWWA3PNG2U0MLX0R0HIBVKC2KISRUNJ' # your FourSquare Access Token\nVERSION = '20180604'\nprint('Your credentials:')\nprint('CLIENT_ID: ' + CLIENT_ID)\nprint('CLIENT_SECRET:' + CLIENT_SECRET)",
            "execution_count": 3,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "Your credentials:\nCLIENT_ID: X5OYKVDZ3N4VVLFJERLAXNHKHPIKVR14BIJPSHXRLZ314EZI\nCLIENT_SECRET:UCVWLRPX4LSGGTW3EQYFSO0HL2L0TKCM0X01DPQUWNOZOBWF\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "### Define Coordinares of the Center of the Call and the Query"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "geolocator = Nominatim(user_agent=\"foursquare_agent\")\nlatitude = 40.72537645209457\nlongitude = -73.9935543780856\nsearch_query = 'Pizza'\nradius =10000\nprint(latitude, longitude)",
            "execution_count": 4,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "40.72537645209457 -73.9935543780856\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "### Define the URL and Make the \"Search\" Call"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "url = 'https://api.foursquare.com/v2/venues/search?client_id={}&client_secret={}&ll={},{}&oauth_token={}&v={}&query={}&radius={}'.format(CLIENT_ID, CLIENT_SECRET, latitude, longitude,ACCESS_TOKEN, VERSION, search_query, radius)\nresults = requests.get(url).json()",
            "execution_count": 5,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "### Transform the Data into a Pandas Dataframe and Trim out Unnecessary Data"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "# assign relevant part of JSON to venues\nvenues = results['response']['venues']\n\n# tranform venues into a dataframe\ndataframe = json_normalize(venues)\n\n# keep only columns that include venue name, and anything that is associated with location\nfiltered_columns = ['name', 'categories'] + [col for col in dataframe.columns if col.startswith('location.')] + ['id']\ndataframe_filtered = dataframe.loc[:, filtered_columns]\n\n# function that extracts the category of the venue\ndef get_category_type(row):\n    try:\n        categories_list = row['categories']\n    except:\n        categories_list = row['venue.categories']\n        \n    if len(categories_list) == 0:\n        return None\n    else:\n        return categories_list[0]['name']\n\n# filter the category for each row\ndataframe_filtered['categories'] = dataframe_filtered.apply(get_category_type, axis=1)\n\n# clean column names by keeping only last term\ndataframe_filtered.columns = [column.split('.')[-1] for column in dataframe_filtered.columns]\n\ndataframe_filtered.drop(columns=['crossStreet', 'address','labeledLatLngs','postalCode', 'city','state','country', 'formattedAddress','id','cc','categories'], inplace = True)\n\ndataframe_filtered",
            "execution_count": 6,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "/opt/conda/envs/Python-3.7-main/lib/python3.7/site-packages/ipykernel/__main__.py:5: FutureWarning: pandas.io.json.json_normalize is deprecated, use pandas.json_normalize instead\n",
                    "name": "stderr"
                },
                {
                    "output_type": "execute_result",
                    "execution_count": 6,
                    "data": {
                        "text/plain": "                                             name        lat        lng  \\\n0                             Prince Street Pizza  40.723093 -73.994527   \n1                                     Joe's Pizza  40.730461 -74.001972   \n2                      Lombardi's Coal Oven Pizza  40.721636 -73.995635   \n3                      Famous Ben's Pizza of SoHo  40.724840 -74.002551   \n4                                  Champion Pizza  40.721638 -73.997470   \n5                                 99\u00a2 Fresh Pizza  40.726376 -73.989338   \n6                              East Village Pizza  40.728272 -73.985006   \n7                                   Pizza Mercato  40.730050 -73.993999   \n8             Artichoke Basille's Pizza & Brewery  40.729879 -74.000600   \n9                                     Bravo Pizza  40.734198 -73.989269   \n10                            Taco Bell/Pizza Hut  40.735398 -73.992790   \n11                          Bleecker Street Pizza  40.732268 -74.003589   \n12                                  2 Bros. Pizza  40.728905 -73.988324   \n13                                  Percy's Pizza  40.729292 -74.001351   \n14                                Stromboli Pizza  40.727691 -73.985305   \n15                             Little Gio's Pizza  40.723791 -73.988103   \n16                                  Fiore's Pizza  40.728772 -74.000196   \n17                                    Ray's Pizza  40.729250 -73.989828   \n18                      Artichoke Basille\u2019s Pizza  40.732028 -73.983921   \n19  Scott's Pizza Tours - NYC Pizza Walk/Bus Tour  40.722063 -73.996536   \n20                           Nesto's Pizza & Deli  40.729224 -73.992039   \n21                                    Stars Pizza  40.724256 -73.988142   \n22                         Little Italy Pizza III  40.734726 -73.992091   \n23                     Village Restaurant & Pizza  40.723941 -73.987941   \n24                                99\u00a2 Fresh Pizza  40.722609 -73.988416   \n25                             Grocery Deli-Pizza  40.720858 -73.997515   \n26                            AKA 99\u00a2 Fresh Pizza  40.719254 -73.989562   \n27                        Little Italy Pizza Deli  40.727251 -74.005499   \n28                                 Solo Pizza NYC  40.722425 -73.983146   \n29                                  Pizza Shop La  40.725788 -73.983551   \n\n    distance  \n0        267  \n1        908  \n2        451  \n3        761  \n4        531  \n5        372  \n6        789  \n7        521  \n8        777  \n9       1046  \n10      1117  \n11      1142  \n12       590  \n13       789  \n14       742  \n15       492  \n16       675  \n17       533  \n18      1099  \n19       446  \n20       447  \n21       473  \n22      1048  \n23       499  \n24       531  \n25       603  \n26       760  \n27      1029  \n28       937  \n29       845  ",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>lat</th>\n      <th>lng</th>\n      <th>distance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Prince Street Pizza</td>\n      <td>40.723093</td>\n      <td>-73.994527</td>\n      <td>267</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Joe's Pizza</td>\n      <td>40.730461</td>\n      <td>-74.001972</td>\n      <td>908</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Lombardi's Coal Oven Pizza</td>\n      <td>40.721636</td>\n      <td>-73.995635</td>\n      <td>451</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Famous Ben's Pizza of SoHo</td>\n      <td>40.724840</td>\n      <td>-74.002551</td>\n      <td>761</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Champion Pizza</td>\n      <td>40.721638</td>\n      <td>-73.997470</td>\n      <td>531</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>99\u00a2 Fresh Pizza</td>\n      <td>40.726376</td>\n      <td>-73.989338</td>\n      <td>372</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>East Village Pizza</td>\n      <td>40.728272</td>\n      <td>-73.985006</td>\n      <td>789</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Pizza Mercato</td>\n      <td>40.730050</td>\n      <td>-73.993999</td>\n      <td>521</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Artichoke Basille's Pizza &amp; Brewery</td>\n      <td>40.729879</td>\n      <td>-74.000600</td>\n      <td>777</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Bravo Pizza</td>\n      <td>40.734198</td>\n      <td>-73.989269</td>\n      <td>1046</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Taco Bell/Pizza Hut</td>\n      <td>40.735398</td>\n      <td>-73.992790</td>\n      <td>1117</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Bleecker Street Pizza</td>\n      <td>40.732268</td>\n      <td>-74.003589</td>\n      <td>1142</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2 Bros. Pizza</td>\n      <td>40.728905</td>\n      <td>-73.988324</td>\n      <td>590</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Percy's Pizza</td>\n      <td>40.729292</td>\n      <td>-74.001351</td>\n      <td>789</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Stromboli Pizza</td>\n      <td>40.727691</td>\n      <td>-73.985305</td>\n      <td>742</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Little Gio's Pizza</td>\n      <td>40.723791</td>\n      <td>-73.988103</td>\n      <td>492</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Fiore's Pizza</td>\n      <td>40.728772</td>\n      <td>-74.000196</td>\n      <td>675</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Ray's Pizza</td>\n      <td>40.729250</td>\n      <td>-73.989828</td>\n      <td>533</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Artichoke Basille\u2019s Pizza</td>\n      <td>40.732028</td>\n      <td>-73.983921</td>\n      <td>1099</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Scott's Pizza Tours - NYC Pizza Walk/Bus Tour</td>\n      <td>40.722063</td>\n      <td>-73.996536</td>\n      <td>446</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Nesto's Pizza &amp; Deli</td>\n      <td>40.729224</td>\n      <td>-73.992039</td>\n      <td>447</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Stars Pizza</td>\n      <td>40.724256</td>\n      <td>-73.988142</td>\n      <td>473</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Little Italy Pizza III</td>\n      <td>40.734726</td>\n      <td>-73.992091</td>\n      <td>1048</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Village Restaurant &amp; Pizza</td>\n      <td>40.723941</td>\n      <td>-73.987941</td>\n      <td>499</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>99\u00a2 Fresh Pizza</td>\n      <td>40.722609</td>\n      <td>-73.988416</td>\n      <td>531</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Grocery Deli-Pizza</td>\n      <td>40.720858</td>\n      <td>-73.997515</td>\n      <td>603</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>AKA 99\u00a2 Fresh Pizza</td>\n      <td>40.719254</td>\n      <td>-73.989562</td>\n      <td>760</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Little Italy Pizza Deli</td>\n      <td>40.727251</td>\n      <td>-74.005499</td>\n      <td>1029</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Solo Pizza NYC</td>\n      <td>40.722425</td>\n      <td>-73.983146</td>\n      <td>937</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Pizza Shop La</td>\n      <td>40.725788</td>\n      <td>-73.983551</td>\n      <td>845</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "### Create the Map of Venues"
        },
        {
            "metadata": {
                "scrolled": true
            },
            "cell_type": "code",
            "source": "venues_map = folium.Map(location=[latitude, longitude], zoom_start=13) # generate map centred around the Conrad Hotel\n\n# add a red circle marker to represent the Conrad Hotel\nfolium.CircleMarker(\n    [latitude+0.001, longitude-0.0025],\n    radius=20,\n    color='cyan',\n    popup='The Sheen Center for Thought & Culture',\n    fill = True,\n    fill_color = 'red',\n    fill_opacity = 0\n).add_to(venues_map)\n\n# add the Italian restaurants as blue circle markers\nfor lat, lng, label in zip(dataframe_filtered.lat, dataframe_filtered.lng, dataframe_filtered.name):\n    folium.CircleMarker(\n        [lat, lng],\n        radius=5,\n        color='blue',\n        popup=folium.Popup(label, parse_html=True),\n        fill = True,\n        fill_color='blue',\n        fill_opacity=0.6\n    ).add_to(venues_map)\n\n# display map\ndisplay(venues_map)",
            "execution_count": 29,
            "outputs": [
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": "<folium.folium.Map at 0x7f505b216250>",
                        "text/html": "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "### Use K-means to Cluster them"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "manhattan_grouped = dataframe_filtered.groupby('name').mean().reset_index()\nmanhattan_grouped_clustering = manhattan_grouped.drop('name', 1)",
            "execution_count": 31,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "\n# set number of clusters\nkclusters = 3\n\n#manhattan_grouped_clustering = manhattan_grouped.drop('Neighborhood', 1)\n\n# run k-means clustering\nkmeans = KMeans(n_clusters=kclusters, random_state=0).fit(manhattan_grouped_clustering)\n\n# check cluster labels generated for each row in the dataframe\nkmeans.labels_[0:10] \nmanhattan_grouped_clustering.insert(0, 'Cluster Labels', kmeans.labels_)\nmanhattan_grouped_clustering",
            "execution_count": 32,
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 32,
                    "data": {
                        "text/plain": "    Cluster Labels        lat        lng  distance\n0                1  40.728905 -73.988324     590.0\n1                1  40.724492 -73.988877     451.5\n2                2  40.719254 -73.989562     760.0\n3                2  40.729879 -74.000600     777.0\n4                0  40.732028 -73.983921    1099.0\n5                0  40.732268 -74.003589    1142.0\n6                0  40.734198 -73.989269    1046.0\n7                1  40.721638 -73.997470     531.0\n8                2  40.728272 -73.985006     789.0\n9                2  40.724840 -74.002551     761.0\n10               2  40.728772 -74.000196     675.0\n11               1  40.720858 -73.997515     603.0\n12               2  40.730461 -74.001972     908.0\n13               1  40.723791 -73.988103     492.0\n14               0  40.727251 -74.005499    1029.0\n15               0  40.734726 -73.992091    1048.0\n16               1  40.721636 -73.995635     451.0\n17               1  40.729224 -73.992039     447.0\n18               2  40.729292 -74.001351     789.0\n19               1  40.730050 -73.993999     521.0\n20               2  40.725788 -73.983551     845.0\n21               1  40.723093 -73.994527     267.0\n22               1  40.729250 -73.989828     533.0\n23               1  40.722063 -73.996536     446.0\n24               0  40.722425 -73.983146     937.0\n25               1  40.724256 -73.988142     473.0\n26               2  40.727691 -73.985305     742.0\n27               0  40.735398 -73.992790    1117.0\n28               1  40.723941 -73.987941     499.0",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Cluster Labels</th>\n      <th>lat</th>\n      <th>lng</th>\n      <th>distance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>40.728905</td>\n      <td>-73.988324</td>\n      <td>590.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>40.724492</td>\n      <td>-73.988877</td>\n      <td>451.5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>40.719254</td>\n      <td>-73.989562</td>\n      <td>760.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>40.729879</td>\n      <td>-74.000600</td>\n      <td>777.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>40.732028</td>\n      <td>-73.983921</td>\n      <td>1099.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0</td>\n      <td>40.732268</td>\n      <td>-74.003589</td>\n      <td>1142.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0</td>\n      <td>40.734198</td>\n      <td>-73.989269</td>\n      <td>1046.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1</td>\n      <td>40.721638</td>\n      <td>-73.997470</td>\n      <td>531.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2</td>\n      <td>40.728272</td>\n      <td>-73.985006</td>\n      <td>789.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2</td>\n      <td>40.724840</td>\n      <td>-74.002551</td>\n      <td>761.0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2</td>\n      <td>40.728772</td>\n      <td>-74.000196</td>\n      <td>675.0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1</td>\n      <td>40.720858</td>\n      <td>-73.997515</td>\n      <td>603.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2</td>\n      <td>40.730461</td>\n      <td>-74.001972</td>\n      <td>908.0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>1</td>\n      <td>40.723791</td>\n      <td>-73.988103</td>\n      <td>492.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0</td>\n      <td>40.727251</td>\n      <td>-74.005499</td>\n      <td>1029.0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>0</td>\n      <td>40.734726</td>\n      <td>-73.992091</td>\n      <td>1048.0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>1</td>\n      <td>40.721636</td>\n      <td>-73.995635</td>\n      <td>451.0</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>1</td>\n      <td>40.729224</td>\n      <td>-73.992039</td>\n      <td>447.0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>2</td>\n      <td>40.729292</td>\n      <td>-74.001351</td>\n      <td>789.0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>40.730050</td>\n      <td>-73.993999</td>\n      <td>521.0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>2</td>\n      <td>40.725788</td>\n      <td>-73.983551</td>\n      <td>845.0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1</td>\n      <td>40.723093</td>\n      <td>-73.994527</td>\n      <td>267.0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>1</td>\n      <td>40.729250</td>\n      <td>-73.989828</td>\n      <td>533.0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>1</td>\n      <td>40.722063</td>\n      <td>-73.996536</td>\n      <td>446.0</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>0</td>\n      <td>40.722425</td>\n      <td>-73.983146</td>\n      <td>937.0</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>1</td>\n      <td>40.724256</td>\n      <td>-73.988142</td>\n      <td>473.0</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>2</td>\n      <td>40.727691</td>\n      <td>-73.985305</td>\n      <td>742.0</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>0</td>\n      <td>40.735398</td>\n      <td>-73.992790</td>\n      <td>1117.0</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>1</td>\n      <td>40.723941</td>\n      <td>-73.987941</td>\n      <td>499.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n\n# set color scheme for the clusters\nx = np.arange(kclusters)\nys = [i + x + (i*x)**2 for i in range(kclusters)]\ncolors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\nrainbow = [colors.rgb2hex(i) for i in colors_array]\n\n# add markers to the map\nmarkers_colors = []\nfor lat, lon, poi, cluster in zip(manhattan_grouped['lat'], manhattan_grouped['lng'], manhattan_grouped['name'], manhattan_grouped_clustering['Cluster Labels']):\n    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n    folium.CircleMarker(\n        [lat, lon],\n        radius=5,\n        popup=label,\n        color=rainbow[cluster-1],\n        fill=True,\n        fill_color=rainbow[cluster-1],\n        fill_opacity=0.7).add_to(map_clusters)\n       \nmap_clusters",
            "execution_count": 33,
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 33,
                    "data": {
                        "text/plain": "<folium.folium.Map at 0x7f505b382f10>",
                        "text/html": "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
                    },
                    "metadata": {}
                }
            ]
        }
    ],
    "metadata": {
        "kernelspec": {
            "name": "python3",
            "display_name": "Python 3.7",
            "language": "python"
        },
        "language_info": {
            "name": "python",
            "version": "3.7.9",
            "mimetype": "text/x-python",
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "pygments_lexer": "ipython3",
            "nbconvert_exporter": "python",
            "file_extension": ".py"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 1
}
